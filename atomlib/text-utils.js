(function() {
  var IsJapaneseKanaCharacter, hasPairedCharacter, isCJKCharacter, isCJKUnifiedIdeograph, isCombinedCharacter, isCombiningCharacter, isDoubleWidthCharacter, isFullWidthForm, isHalfWidthCharacter, isHighSurrogate, isKoreanCharacter, isLowSurrogate, isPairedCharacter, isSurrogatePair, isVariationSelector, isVariationSequence, isWordStart, isWrapBoundary;

  isHighSurrogate = function(charCode) {
    return (0xD800 <= charCode && charCode <= 0xDBFF);
  };

  isLowSurrogate = function(charCode) {
    return (0xDC00 <= charCode && charCode <= 0xDFFF);
  };

  isVariationSelector = function(charCode) {
    return (0xFE00 <= charCode && charCode <= 0xFE0F);
  };

  isCombiningCharacter = function(charCode) {
    return (0x0300 <= charCode && charCode <= 0x036F) || (0x1AB0 <= charCode && charCode <= 0x1AFF) || (0x1DC0 <= charCode && charCode <= 0x1DFF) || (0x20D0 <= charCode && charCode <= 0x20FF) || (0xFE20 <= charCode && charCode <= 0xFE2F);
  };

  isSurrogatePair = function(charCodeA, charCodeB) {
    return isHighSurrogate(charCodeA) && isLowSurrogate(charCodeB);
  };

  isVariationSequence = function(charCodeA, charCodeB) {
    return !isVariationSelector(charCodeA) && isVariationSelector(charCodeB);
  };

  isCombinedCharacter = function(charCodeA, charCodeB) {
    return !isCombiningCharacter(charCodeA) && isCombiningCharacter(charCodeB);
  };

  isPairedCharacter = function(string, index) {
    var charCodeA, charCodeB;
    if (index == null) {
      index = 0;
    }
    charCodeA = string.charCodeAt(index);
    charCodeB = string.charCodeAt(index + 1);
    return isSurrogatePair(charCodeA, charCodeB) || isVariationSequence(charCodeA, charCodeB) || isCombinedCharacter(charCodeA, charCodeB);
  };

  IsJapaneseKanaCharacter = function(charCode) {
    return (0x3000 <= charCode && charCode <= 0x30FF);
  };

  isCJKUnifiedIdeograph = function(charCode) {
    return (0x4E00 <= charCode && charCode <= 0x9FFF);
  };

  isFullWidthForm = function(charCode) {
    return (0xFF01 <= charCode && charCode <= 0xFF5E) || (0xFFE0 <= charCode && charCode <= 0xFFE6);
  };

  isDoubleWidthCharacter = function(character) {
    var charCode;
    charCode = character.charCodeAt(0);
    return IsJapaneseKanaCharacter(charCode) || isCJKUnifiedIdeograph(charCode) || isFullWidthForm(charCode);
  };

  isHalfWidthCharacter = function(character) {
    var charCode;
    charCode = character.charCodeAt(0);
    return (0xFF65 <= charCode && charCode <= 0xFFDC) || (0xFFE8 <= charCode && charCode <= 0xFFEE);
  };

  isKoreanCharacter = function(character) {
    var charCode;
    charCode = character.charCodeAt(0);
    return (0xAC00 <= charCode && charCode <= 0xD7A3) || (0x1100 <= charCode && charCode <= 0x11FF) || (0x3130 <= charCode && charCode <= 0x318F) || (0xA960 <= charCode && charCode <= 0xA97F) || (0xD7B0 <= charCode && charCode <= 0xD7FF);
  };

  isCJKCharacter = function(character) {
    return isDoubleWidthCharacter(character) || isHalfWidthCharacter(character) || isKoreanCharacter(character);
  };

  isWordStart = function(previousCharacter, character) {
    return (previousCharacter === ' ' || previousCharacter === '\t') && (character !== ' ' && character !== '\t');
  };

  isWrapBoundary = function(previousCharacter, character) {
    return isWordStart(previousCharacter, character) || isCJKCharacter(character);
  };

  hasPairedCharacter = function(string) {
    var index;
    index = 0;
    while (index < string.length) {
      if (isPairedCharacter(string, index)) {
        return true;
      }
      index++;
    }
    return false;
  };

  module.exports = {
    isPairedCharacter: isPairedCharacter,
    hasPairedCharacter: hasPairedCharacter,
    isDoubleWidthCharacter: isDoubleWidthCharacter,
    isHalfWidthCharacter: isHalfWidthCharacter,
    isKoreanCharacter: isKoreanCharacter,
    isWrapBoundary: isWrapBoundary
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,
